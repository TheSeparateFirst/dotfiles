;;;;;;;;;;;;;;;;;;;;
;; LANGUAGE MODES ;;
;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d/lisp/")

;; Erlang mode
;; (setq load-path (cons  "/home/nullptr/.usr/lib/erlang/lib/tools-2.6.6.5/emacs"
;; 		       load-path))
;; (setq erlang-root-dir "/home/nullptr/.usr/lib/erlang")
;; (setq exec-path (cons "/home/nullptr/.usr/lib/erlang/bin" exec-path))
;; (require 'erlang-start)


;; Markdown mode

(autoload 'markdown-mode "markdown-mode.el"
  "Major mode for editing Markdown files" t)
(setq auto-mode-alist
      (cons '("\\.text" . markdown-mode) auto-mode-alist))

;; Haml mode
(add-hook 'haml-mode-hook
	  '(lambda ()
	     (setq indent-tabs-mode nil)
	     (define-key haml-mode-map "\C-m" 'newline-and-indent)))
;;;;;;;;;;;;;;;;;;;;
;; ido-mode stuff ;;
;;;;;;;;;;;;;;;;;;;;

(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)



;;;;;;;;;;;;;;;;;
;; Keybindings ;;
;;;;;;;;;;;;;;;;;

(define-key global-map (kbd "RET") 'newline-and-indent)

;; Set C-x C-m to act as M-x
(global-set-key "\C-x\C-m" 'execute-extended-command)
(global-set-key "\C-c\C-m" 'execute-extended-command)

;; Set backwards-kill-word
(global-set-key "\C-w" 'backward-kill-word)
(global-set-key "\C-x\C-k" 'kill-region)
(global-set-key "\C-c\C-k" 'kill-region)

;;;;;;;;;;;;;;;
;; UI tweaks ;;
;;;;;;;;;;;;;;;

;; Change yes/no prompts to y/n
(fset 'yes-or-no-p 'y-or-n-p)

;; easy buffer creation with C-x b
(setq ido-create-new-buffer 'always)

;; Just make the damn file

(setq confirm-nonexistent-file-or-buffer nil)

;; Use chrome!
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "google-chrome")
;;;;;;;;;;;;;;;;;;;;;;;;;
;; M-x Customize stuff ;;
;;;;;;;;;;;;;;;;;;;;;;;;;

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(browse-url-browser-function (quote browse-url-default-browser))
 '(delete-selection-mode nil)
 '(inhibit-startup-screen t)
 '(initial-scratch-message ";; Welcome home!

")
 '(mark-even-if-inactive t)
 '(mouse-Wheel-progressive-speed nil)
 '(scroll-bar-mode (quote right)))
;;; This was installed by package-install.el.
;;; This provides support for the package system and
;;; interfacing with ELPA, the package archive.
;;; Move this code earlier if you want to reference
;;; packages in your .emacs.
(when
    (load
     (expand-file-name "~/.emacs.d/elpa/package.el"))
  (package-initialize))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#ffffff" :foreground "#221f1e" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 98 :width normal :foundry "unknown" :family "Droid Sans Mono")))))
