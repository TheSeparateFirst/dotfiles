GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2010-2011  Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to bug-gnu-emacs@gnu.org.
If possible, use M-x report-emacs-bug.

This file is about changes in Emacs version 24.

See files NEWS.23, NEWS.22, NEWS.21, NEWS.20, NEWS.19, NEWS.18,
and NEWS.1-17 for changes in older Emacs versions.

You can narrow news to a specific version by calling `view-emacs-news'
with a prefix argument or by typing C-u C-h C-n.


Temporary note:
 +++ indicates that the appropriate manual has already been updated.
 --- means no change in the manuals is called for.
When you add a new item, please add it without either +++ or ---
so we will look at it and add it to the manual.


* Installation Changes in Emacs 24.1

** Configure links against libselinux if it is found.
You can disable this by using --without-selinux.

---
** By default, the installed Info and man pages are compressed.
You can disable this by configuring --without-compress-info.

---
** There are new configure options:
--with-mmdf, --with-mail-unlink, --with-mailhost.
These provide no new functionality, they just remove the need to edit
lib-src/Makefile by hand in order to use the associated features.

---
** Emacs can be compiled against Gtk+ 3.0 if you pass --with-x-toolkit=gtk3
to configure.  Note that other libraries used by Emacs, RSVG and GConf,
also depend on Gtk+.  You can disable them with --without-rsvg and
--without-gconf.

---
** There is a new configure option --enable-use-lisp-union-type.
This is only useful for Emacs developers to debug certain types of bugs.
This is not a new feature; only the configure flag is new.

---
** There is a new configure option --with-wide-int.
With it, Emacs integers typically have 62 bits, even on 32-bit machines.
On 32-bit hosts, this raises the limit on buffer sizes from about 512 MiB
to about 2 GiB.

---
** New translation of the Emacs Tutorial in Hebrew is available.
Type `C-u C-h t' to choose it in case your language setup doesn't
automatically select it.

** Emacs can be compiled with ImageMagick support.
Emacs links to ImageMagick if version 6.2.8 or newer of the library is
present at build time.  To inhibit ImageMagick, use the configure
option `--without-imagemagick' .

---
** The standalone programs digest-doc and sorted-doc are removed.
Emacs now uses Lisp commands `doc-file-to-man' and `doc-file-to-info'.

---
** The standalone program `fakemail' is removed.
If you need it, feedmail.el provides a superset of the functionality.


* Startup Changes in Emacs 24.1

---
** The --unibyte, --multibyte, --no-multibyte, and --no-unibyte
command line arguments, and the EMACS_UNIBYTE environment variable, no
longer have any effect.  (They were declared obsolete in Emacs 23.)

+++
** New command line option `--no-site-lisp' removes site-lisp directories
from load-path.  -Q now implies this.

---
** On Windows, Emacs now warns when the obsolete _emacs init file is used,
and also when HOME is set to C:\ by default.


* Changes in Emacs 24.1

+++
** auto-mode-case-fold is now enabled by default.

** Completion

*** shell-mode uses pcomplete rules, with the standard completion UI.

*** Many packages have been changed to use `completion-at-point'
rather than their own completion code.

*** `completion-at-point' now handles tags and semantic completion.
---
*** Completion in a non-minibuffer now tries to detect the end of completion
and pops down the *Completions* buffer accordingly.
+++
*** Completion can cycle, depending on completion-cycle-threshold.
+++
*** New completion style `substring'.
+++
*** Completion style can be set per-category `completion-category-overrides'.
+++
*** Completion of buffers now uses substring completion by default.

** Mail changes

The default of `send-mail-function' is now `sendmail-query-once',
which asks the user (once) whether to use the smtpmail package to send
email, or to use the old defaults that rely on external mail
facilities (`sendmail-send-it' on GNU/Linux and other Unix-like
systems, and `mailclient-send-it' on Windows).

*** smtpmail changes

**** smtpmail now uses encrypted connections (via STARTTLS) if the
mail server supports them.  It also uses the auth-source framework for
getting credentials.

**** The variable `smtpmail-auth-credentials' has been removed.
That variable used to have the default value "~/.authinfo", in which
case you won't see any difference.  But if you changed it to be a list
of user names and passwords, that setting is now ignored; you will be
prompted for the user name and the password, which will then be saved
to ~/.authinfo.

You can also manually copy the credentials to your ~/.authinfo file.
For example, if you had

  (setq smtpmail-auth-credentials
        '(("mail.example.org" 25 "jim" "s!cret")))

then the equivalent line in ~/.authinfo would be

  machine mail.example.org port 25 login jim password s!cret

**** The variable `smtpmail-starttls-credentials' has been removed.

If you had that set, then you need to put

  machine smtp.whatever.foo port 25 key "~/.my_smtp_tls.key" cert "~/.my_smtp_tls.cert"

in your ~/.authinfo file instead.

*** sendmail changes
+++
You can now add MIME attachments to outgoing messages with the new
command `mail-add-attachment'.

---
The command `mail-attach-file' was renamed to `mail-insert-file'; the
old name is now an obsolete alias to the new name.

** Emacs server and client changes
+++
*** New option `server-port' specifies the port on which the Emacs
server should listen.
+++
*** New emacsclient argument -q/--quiet suppresses some status messages.
+++
*** New emacsclient argument --frame-parameters can be used to set the
frame parameters of a newly-created graphical frame.
+++
*** If emacsclient shuts down as a result of Emacs signaling an
error, its exit status is 1.
+++
*** New emacsclient argument --parent-id ID.
This opens a client frame in parent X window ID, via XEmbed, similar
to the --parent-id argument to Emacs.

** Internationalization changes

+++
*** Emacs now supports display and editing of bidirectional text.

Text that includes characters from right-to-left (RTL) scripts, such
as Arabic, Farsi, or Hebrew, is displayed in the correct visual order
as expected by users of those scripts.  This display reordering is a
"Full bidirectionality" class implementation of the Unicode
Bidirectional Algorithm.  Buffers with no RTL text should look exactly
the same as before.

For more information, see the node "Bidirectional Editing" in the
Emacs Manual.

+++
**** New buffer-local variable `bidi-display-reordering'.
To disable display reordering in any given buffer, change this to nil.

+++
**** New buffer-local variable `bidi-paragraph-direction'.
If nil (the default), Emacs determines the base direction of each
paragraph from its text, as specified by the Unicode Bidirectional
Algorithm.

Setting this to `right-to-left' or `left-to-right' forces a particular
base direction on each paragraph in the buffer.

Paragraphs whose base direction is right-to-left are displayed
starting at the right margin of the window.

+++
*** Enhanced support for characters with no glyphs in available fonts.
If a character has no glyphs in any of the available fonts, Emacs
normally displays it either as a hexadecimal code in a box or as a
thin 1-pixel space.  In addition to these two methods, Emacs can
display these characters as empty box, as an acronym, or not display
them at all.  To change how these characters are displayed, customize
the variable `glyphless-char-display-control'.

On character terminals, these methods are used for characters that
cannot be encoded by the `terminal-coding-system'.

---
*** New input methods for Farsi: farsi and farsi-translit.

+++
*** `nobreak-char-display' now also highlights Unicode hyphen chars
(U+2010 and U+2011).

** Improved GTK integration
+++
*** GTK scroll-bars are now placed on the right by default.
Use `set-scroll-bar-mode' to change this.
+++
*** GTK tool bars can have just text, just images or images and text.
Customize `tool-bar-style' to choose style.  On a Gnome desktop, the default
is taken from the desktop settings.
---
*** GTK tool bars can be placed on the left/right or top/bottom of the frame.
The frame-parameter tool-bar-position controls this.  It takes the values
top, left, right or bottom.  The Options => Show/Hide menu has entries
for this.
+++
*** The colors for selected text (the `region' face) are taken from
the GTK theme when Emacs is built with GTK.
+++
*** Emacs uses GTK tooltips by default if built with GTK.  You can turn that
off by customizing x-gtk-use-system-tooltips.

+++
** New basic faces `error', `warning', `success' are available to
highlight strings that indicate failure, caution or successful operation.

** Lucid menus and dialogs can display antialiased fonts if Emacs is built
with Xft.  To change font, use the X resource font, for example:
Emacs.pane.menubar.font:  Courier-12

+++
** On graphical displays, the mode-line no longer ends in dashes.
Also, the first dash (which does not indicate anything) is just
displayed as a space.

** Basic SELinux support has been added.
This requires Emacs to be linked with libselinux at build time.

*** Emacs preserves the SELinux file context when backing up, and
optionally when copying files. To this end, copy-file has an extra
optional argument, and backup-buffer and friends include the SELinux
context in their return values.

*** The new functions file-selinux-context and set-file-selinux-context
get and set the SELinux context of a file.
---
*** Tramp offers handlers for file-selinux-context and set-file-selinux-context
for remote machines which support SELinux.

** Changes for exiting Emacs
+++
*** The function kill-emacs is now run upon receipt of the signals
SIGTERM and SIGHUP, and upon SIGINT in batch mode.
+++
*** kill-emacs-hook is now also run in batch mode.
If you have code that adds something to kill-emacs-hook, you should
consider if it is still appropriate to add it in the noninteractive case.

** Scrolling changes
+++
*** New scrolling commands `scroll-up-command' and `scroll-down-command'
(bound to C-v/[next] and M-v/[prior]) do not signal errors at top/bottom
of buffer at first key-press (instead move to top/bottom of buffer)
when `scroll-error-top-bottom' is non-nil.
+++
*** New variable `scroll-error-top-bottom' (see above).
+++
*** New scrolling commands `scroll-up-line' and `scroll-down-line'
scroll a line instead of full screen.
+++
*** New property `scroll-command' should be set on a command's symbol to
define it as a scroll command affected by `scroll-preserve-screen-position'.
+++
*** If you customize `scroll-conservatively' to a value greater than 100,
Emacs will never recenter point in the window when it scrolls due to
cursor motion commands or commands that move point (e.f., `M-g M-g').
Previously, you needed to use `most-positive-fixnum' as the value of
`scroll-conservatively' to achieve the same effect.
---
*** ``Aggressive'' scrolling now honors the scroll margins.
If you customize `scroll-up-aggressively' or
`scroll-down-aggressively' and move point off the window, Emacs now
scrolls the window so as to avoid positioning point inside the scroll
margin.

** Trash changes
+++
*** `delete-by-moving-to-trash' now only affects commands that specify
trashing.  This avoids inadvertently trashing temporary files.
+++
*** Calling `delete-file' or `delete-directory' with a prefix argument
now forces true deletion, regardless of `delete-by-moving-to-trash'.

** New option `list-colors-sort' defines the color sort order
for `list-colors-display'.

** An Emacs Lisp package manager is now included.
This is a convenient way to download and install additional packages,
from a package repository at http://elpa.gnu.org.
+++
*** `M-x list-packages' shows a list of packages, which can be
selected for installation.
+++
*** New command `describe-package', bound to `C-h P'.
+++
*** By default, all installed packages are loaded and activated
automatically when Emacs starts up.  To disable this, set
`package-enable-at-startup' to nil.  To change which packages are
loaded, customize `package-load-list'.

** Custom Themes

*** `M-x customize-themes' lists Custom themes which can be enabled.

*** New option `custom-theme-load-path' is the load path for themes.
Emacs no longer looks for custom themes in `load-path'.  The default
is to search in `custom-theme-directory', followed by a built-in theme
directory named "themes/" in `data-directory'.

*** New option `custom-safe-themes' records known-safe theme files.
If a theme is not in this list, Emacs queries before loading it, and
offers to save the theme to `custom-safe-themes' automatically.  By
default, all themes included in Emacs are treated as safe.

** The user option `remote-file-name-inhibit-cache' controls whether
the remote file-name cache is used for read access.

** File- and directory-local variable changes
+++
*** You can stop directory local vars from applying to subdirectories.
Add an element (subdirs . nil) to the alist portion of any variables
settings to indicate that the section should not apply to
subdirectories.

*** Directory local variables can apply to some file-less buffers.
Affected modes include dired, vc-dir, and log-edit.  For example,
adding "(diff-mode . ((mode . whitespace)))" to .dir-locals.el will
turn on `whitespace-mode' for *vc-diff* buffers.  Modes should call
`hack-dir-local-variables-non-file-buffer' to support this.
+++
*** Using "mode: MINOR-MODE" to enable a minor mode is deprecated.
Instead, use "eval: (minor-mode 1)".

+++
** The variable `focus-follows-mouse' now always defaults to nil.

** New primitive `secure-hash' that supports many secure hash algorithms
including md5, sha-1 and sha-2 (sha-224, sha-256, sha-384 and sha-512).
The elisp implementation sha1.el is removed. Feature sha1 is provided
by default.

** Menu-bar changes

*** `menu-bar-select-buffer-function' lets you choose another operation
instead of `switch-to-buffer' when selecting an item in the Buffers menu.

** Window changes

+++
*** Resizing an Emacs frame now preserves proportional window sizes,
modulo restrictions like window minimum sizes and fixed-size windows.

*** The behavior of `display-buffer' is now customizable in detail.
+++
**** New option `display-buffer-base-action' specifies a list of
user-determined display "actions" (functions and optional arguments
for choosing the displaying window).

This takes precedence over the default display action, which is
specified by `display-buffer-fallback-action'.

+++
**** New option `display-buffer-alist' maps buffer name regexps to
display actions, taking precedence over `display-buffer-base-action'.

+++
*** New option `window-combination-limit'.
The new option `window-combination-limit' allows to return the space
obtained for resizing or creating a window more reliably to the window
from which such space was obtained.

+++
*** New option `window-combination-resize'.
The new option `window-combination-resize' allows to split a window that
otherwise cannot be split because it's too small by stealing space from
other windows in the same combination.  Subsequent resizing or deletion
of the window will resize all windows in the same combination as well.

+++
*** New commands `maximize-window' and `minimize-window'.
These maximize and minimize the size of a window within its frame.

+++
*** New commands `switch-to-prev-buffer' and `switch-to-next-buffer'.
These functions allow to navigate through the live buffers that have
been shown in a specific window.

+++
*** New functions `window-state-get' and `window-state-put'.
These functions allow to save and restore the state of an arbitrary
frame or window as an Elisp object.

** The inactive minibuffer has its own major mode `minibuffer-inactive-mode'.
This is handy for minibuffer-only frames, and is also used for the "mouse-1
pops up *Messages*" feature, which can now easily be changed.


* Editing Changes in Emacs 24.1

** Search changes
+++
*** C-y in Isearch is now bound to isearch-yank-kill, instead of
isearch-yank-line.
+++
*** M-y in Isearch is now bound to isearch-yank-pop, instead of
isearch-yank-kill.
+++
*** M-s C-e in Isearch is now bound to isearch-yank-line.

+++
** New commands `count-words-region' and `count-words'.

*** `count-lines-region' is now an alias for `count-words-region',
bound to M-=, which shows the number of lines, words, and characters.

+++
** The default value of `backup-by-copying-when-mismatch' is now t.

+++
** The command `just-one-space' (M-SPC), if given a negative argument,
also deletes newlines around point.

** Deletion changes
+++
*** New option `delete-active-region'.
If non-nil, [delete] and DEL delete the region if it is active and no
prefix argument is given.  If set to `kill', these commands kill
instead.
+++
*** New command `delete-forward-char', bound to [delete].
This is meant for interactive use, and obeys `delete-active-region'.
The command `delete-char' does not obey `delete-active-region'.
---
*** `delete-backward-char' is now a Lisp function.
Apart from obeying `delete-active-region', its behavior is unchanged.
However, the byte compiler now warns if it is called from Lisp; you
should use delete-char with a negative argument instead.
---
*** The option `mouse-region-delete-keys' has been deleted.

** Selection changes.

The default handling of clipboard and primary selections was changed
to conform with modern X applications.  In short, most commands for
killing and yanking text now use the clipboard, while mouse commands
use the primary selection.

In the following, we provide a list of these changes, followed by a
list of steps to get the old behavior back if you prefer that.

+++
*** `select-active-regions' now defaults to t.
Merely selecting text (e.g. with drag-mouse-1) no longer puts it in
the kill ring.  The selected text is put in the primary selection, if
the system possesses a separate primary selection facility (e.g. X).

+++
**** `select-active-regions' also accepts a new value, `only'.
This means to only set the primary selection for temporarily active
regions (usually made by mouse-dragging or shift-selection);
"ordinary" active regions, such as those made with C-SPC followed by
point motion, do not alter the primary selection.

---
**** `mouse-drag-copy-region' now defaults to nil.

+++
*** mouse-2 is now bound to `mouse-yank-primary'.
This pastes from the primary selection, ignoring the kill-ring.
Previously, mouse-2 was bound to `mouse-yank-at-click'.

+++
*** `x-select-enable-clipboard' now defaults to t on all platforms.
+++
*** `x-select-enable-primary' now defaults to nil.
Thus, commands that kill text or copy it to the kill-ring (such as
M-w, C-w, and C-k) also use the clipboard---not the primary selection.

---
**** The "Copy", "Cut", and "Paste" items in the "Edit" menu are now
exactly equivalent to, respectively M-w, C-w, and C-y.

---
**** Note that on MS-Windows, `x-select-enable-clipboard' was already
non-nil by default, as Windows does not support the primary selection
between applications.

---
*** To return to the previous behavior, do the following:
**** Change `select-active-regions' to nil.
**** Change `mouse-drag-copy-region' to t.
**** Change `x-select-enable-primary' to t (on X only).
**** Change `x-select-enable-clipboard' to nil.
**** Bind `mouse-yank-at-click' to mouse-2.

+++
*** Support for X cut buffers has been removed.

*** X clipboard managers are now supported.
To inhibit this, change `x-select-enable-clipboard-manager' to nil.

+++
** New command `rectangle-number-lines', bound to `C-x r N', numbers
the lines in the current rectangle.  With a prefix argument, this
prompts for a number to count from and for a format string.

+++
** The default value of redisplay-dont-change is now t
This makes Emacs feel more responsive to editing commands that arrive
at high rate, e.g. if you lean on some key, because stopping redisplay
in the middle (when this variable is nil) forces more expensive
updates later on, and Emacs appears to be unable to keep up.


* Changes in Specialized Modes and Packages in Emacs 24.1

+++
** Archive Mode has basic support for browsing and updating 7z archives.

** browse-url has a new variable `browse-url-mailto-function'
specifies how mailto: URLs are handled.  The default is `browse-url-mail'.

** BibTeX mode

*** BibTeX mode now supports biblatex.
Use the variable bibtex-dialect to select support for different BibTeX
dialects.  bibtex-entry-field-alist is now an obsolete alias for
bibtex-BibTeX-entry-alist.

*** New command `bibtex-search-entries' bound to C-c C-a.

*** New `bibtex-entry-format' option `sort-fields', disabled by default.

*** New variable `bibtex-search-entry-globally'.

** Calendar, Diary, and Appt

+++
*** Diary entries can contain non-printing `comments'.
See the variable `diary-comment-start'.

+++
*** Appointments can specify their individual warning times.
See the variable `appt-warning-time-regexp'.

---
*** The function specified by `appt-disp-window-function' may be passed
lists of arguments if multiple appointments are due at similar times.
If you are using a custom function for this, you should update it.

+++
*** New function `diary-hebrew-birthday'.

---
*** Elements of `calendar-day-abbrev-array' and `calendar-month-abbrev-array'
may no longer be nil, but must all be strings.

---
*** The obsolete (since Emacs 22.1) method of enabling the appt package
by adding appt-make-list to diary-hook has been removed.  Use appt-activate.

---
*** Some appt variables (obsolete since Emacs 22.1) have been removed:
appt-issue-message (use the function appt-activate)
appt-visible/appt-msg-window (use the variable appt-display-format)

---
*** Some diary function aliases (obsolete since Emacs 22.1) have been removed:
view-diary-entries, list-diary-entries, show-all-diary-entries

** CC Mode (C, C++, etc.)

*** New feature to "guess" the style in an existing buffer.

** comint and modes derived from it use the generic completion code.

** Compilation mode

*** Compilation mode can be used without font-lock-mode.
`compilation-parse-errors-function' is now obsolete.

*** `compilation-filter-start' is let-bound to the start of the text
inserted by the compilation filter function, when calling
compilation-filter-hook.

*** `compilation-error-screen-columns' is obeyed in the editing buffer.
So programming language modes can set it, whereas previously only the value
in the *compilation* buffer was used.

** Customize

*** Customize buffers now contain a search field.
The search is performed using `customize-apropos'.
To turn off the search field, set custom-search-field to nil.

*** Custom options now start out hidden if at their default values.
Use the arrow to the left of the option name to toggle visibility.

*** custom-buffer-sort-alphabetically now defaults to t.

*** The color widget now has a "Choose" button, which allows you to
choose a color via list-colors-display.

** D-Bus

*** It is possible now, to access alternative buses than the default
system or session bus.

*** dbus-register-{service,method,property}
The -method and -property functions do not automatically register
names anymore.

The new function dbus-register-service registers a service known name
on a D-Bus without simultaneously registering a property or a method.

** Dired-x

*** dired-jump and dired-jump-other-window called with a prefix argument
read a file name from the minibuffer instead of using buffer-file-name.

+++
*** The `dired local variables' feature provided by Dired-x is obsolete.
The standard directory local variables feature replaces it.

** ERC changes

*** New vars `erc-autojoin-timing' and `erc-autojoin-delay'.
If the value of `erc-autojoin-timing' is 'ident, ERC autojoins after a
successful NickServ identification, or after `erc-autojoin-delay'
seconds.  The default value, 'ident, means to autojoin immediately
after connecting.

*** New variable `erc-coding-system-precedence': If we use `undecided'
as the server coding system, this variable will then be consulted.
The default is to decode strings that can be decoded as utf-8 as
utf-8, and do the normal `undecided' decoding for the rest.

** Eshell changes

*** The default value of eshell-directory-name is a directory named
"eshell" in `user-emacs-directory'.  If the old "~/.eshell/" directory
exists, that is used instead.

** gdb-mi

*** GDB User Interface migrated to GDB Machine Interface and now
supports multithread non-stop debugging and debugging of several
threads simultaneously.

** In ido-mode, C-v is no longer bound to ido-toggle-vc.
The reason is that this interferes with cua-mode.

** Image mode

*** RET (`image-toggle-animation') toggles animation, if the displayed
image can be animated.

*** Option `image-animate-loop', if non-nil, loops the animation.
If nil, `image-toggle-animation' plays the animation once.

** Info

*** New command `info-display-manual' displays an Info manual
specified by its name.  If that manual is already visited in some Info
buffer within the current session, the command will display that
buffer.  Otherwise, it will load the manual and display it.  This is
handy if you have many manuals in many Info buffers, and don't
remember the name of the buffer visiting the manual you want to
consult.

** The Landmark game is now invoked with `landmark', not `lm'.

** MH-E has been upgraded to MH-E version 8.3.1.
See MH-E-NEWS for details.

** Modula-2 mode provides auto-indentation.

** mpc.el: Can use pseudo tags of the form tag1|tag2 as a union of two tags.

** Prolog mode has been completely revamped, with lots of additional
functionality such as more intelligent indentation, electricity, support for
more variants, including Mercury, and a lot more.

** Rmail

*** The command `rmail-epa-decrypt' decrypts OpenPGP data
in the Rmail incoming message.

---
*** The variable `rmail-message-filter' no longer has any effect.
This change was made in Emacs 23.1 but was not advertised at the time.
Try using `rmail-show-message-hook' instead.

** Shell mode

*** Shell mode uses pcomplete rules, with the standard completion UI.

*** The `shell' command prompts for the shell path name if the default
directory is a remote file name and neither the environment variable
$ESHELL nor the variable `explicit-shell-file-name' is set.

*** New variable `shell-dir-cookie-re'.
If set to an appropriate regexp, Shell mode can track your cwd by
reading it from your prompt.

---
** SQL Mode enhancements.

*** `sql-dialect' is an alias for `sql-product'.

*** New variable `sql-port' specifies the port number for connecting
to a MySQL or Postgres server.

*** The command `sql-product-interactive' now takes a prefix argument,
which causes it to prompt for an SQL product instead of the current
value of `sql-product'.

*** Product-specific SQL interactive commands now take prefix args.
These commands (`sql-sqlite', `sql-postgres', `sql-mysql', etc.),
given a prefix argument, prompt for a name for the SQL interactive
buffer.  This reduces the need for calling `sql-rename-buffer'.

*** SQL interactive modes suppress command continuation prompts, and
replace tabs with spaces.  The first change impacts multiple line SQL
statements entered with C-j between each line, statements yanked into
the buffer and statements sent with `sql-send-*' functions.  The
second change prevents the MySQL and Postgres interpreters from
listing object name completions when sent text via `sql-send-*'
functions.

*** New custom variables control prompting for login parameters.
Each supported product has a custom variable `sql-*-login-params',
which is a list of the parameters to be prompted for before a
connection is established.

*** New variable `sql-connection-alist' for login parameter values.
This can be used to store different username, database and server
values.  Connections defined in this variable appear in the submenu
SQL->Start... for making new SQLi sessions.

*** New command `sql-connect' starts a predefined SQLi session,
using the login parameters from `sql-connection-alist'.

*** New "Save Connection" menu item in SQLi buffers.
This gathers the login params specified for the SQLi session, if it
was not started by a connection, and saves them as a new connection.

*** Commands for listing database objects and details.
In an SQLi session, you can get a list of objects in the database.
The contents of these lists are product specific.

**** `C-c C-l a' or the "SQL->List all objects" menu item
lists all the objects in the database.  With a prefix argument, it
displays additional details or extend the listing to include other
schemas objects.

**** `C-c C-l t' or the "SQL->List Table details" menu item
prompts for the name of a database table or view and displays the list
of columns in the relation.  With a prefix argument, it displays
additional details about each column.

*** New options `sql-send-terminator' and `sql-oracle-scan-on'.

*** An API for manipulating SQL product definitions has been added.

** TeX modes

*** latex-electric-env-pair-mode keeps \begin..\end matched on the fly.

** Tramp
---
*** There exists a new inline access method "ksu" (kerberized su).
---
*** The following access methods are discontinued: "ssh1_old",
"ssh2_old", "scp1_old", "scp2_old", "imap", "imaps" and "fish".
---
*** The option `ange-ftp-binary-file-name-regexp' has changed its
default value to "".

** `url-queue-retrieve' downloads web pages asynchronously, but allow
controlling the degree of parallelism.

** VC and related modes

*** Support for pulling on distributed version control systems.
The vc-pull command runs a "pull" operation, if it is supported.
This updates the current branch from upstream.  A prefix argument
means to prompt the user for specifics, e.g. a pull location.

**** `vc-update' is now an alias for `vc-pull'.

**** Currently supported by Bzr, Git, and Mercurial.

*** Support for merging on distributed version control systems.
The vc-merge command now runs a "merge" operation, if it is supported.
This merges another branch into the current one.  This command prompts
the user for specifics, e.g. a merge source.

**** Currently supported for Bzr, Git, and Mercurial.

*** New option `vc-revert-show-diff' controls whether `vc-revert'
shows a diff while querying the user.  It defaults to t.

*** Log entries in some Log View buffers can be toggled to display a
longer description by typing RET (log-view-toggle-entry-display).
In the Log View buffers made by `C-x v L' (vc-print-root-log), you can
use this to display the full log entry for the revision at point.

**** Currently supported for Bzr, Git, and Mercurial.

**** Packages using Log View mode can enable this functionality by
binding `log-view-expanded-log-entry-function' to a suitable function.

*** New command `vc-ediff' allows visual comparison of two revisions
of a file similar to `vc-diff', but using ediff backend.

+++
*** The option `vc-initial-comment' was removed in Emacs 23.2, but
this was not advertised at the time.

+++
*** `vc-toggle-read-only' is an obsolete alias for `toggle-read-only'.
Since Emacs 23, it has done the same thing as `toggle-read-only', but
this was not advertised at the time.

** FIXME: xdg-open for browse-url and reportbug, 2010/08.

** Obsolete modes

*** partial-completion-mode is obsolete.
You can get a comparable behavior with:
(setq completion-styles '(partial-completion initials))
(setq completion-pcm-complete-word-inserts-delimiters t)

*** pc-mode.el is obsolete.

*** sregex.el is obsolete, since rx.el is a strict superset.

*** s-region.el and pc-select are obsolete.
They are superseded by shift-select-mode enabled by default in 23.1.

** Miscellaneous

+++
*** f90.el has some support for Fortran 2008 syntax.

---
*** `copyright-fix-years' can optionally convert consecutive years to ranges.

*** New command `nato-region' converts text to NATO phonetic alphabet.


* New Modes and Packages in Emacs 24.1

+++
** Occur Edit mode applies edits made in *Occur* buffers to the
original buffers.  It is bound to "e" in Occur mode.

** New global minor modes electric-pair-mode, electric-indent-mode,
and electric-layout-mode.

** tabulated-list.el provides a generic major mode for tabulated data,
from which other modes can be derived.

** pcase.el provides the ML-style pattern matching macro `pcase'.

** secrets.el is an implementation of the Secret Service API, an
interface to password managers like GNOME Keyring or KDE Wallet.  The
Secret Service API requires D-Bus for communication.  The command
`secrets-show-secrets' offers a buffer with a visualization of the
secrets.

** notifications.el provides an implementation of the Desktop
Notifications API.  It requires D-Bus for communication.

** soap-client.el supports access to SOAP web services from Emacs.
soap-inspect.el is an interactive inspector for SOAP WSDL structures.

** xmodmap-generic-mode for xmodmap files.

** New emacs-lock.el package.
(The pre-existing one has been renamed to old-emacs-lock.el and moved
to obsolete/.)  Now, Emacs Lock is a proper minor mode
`emacs-lock-mode'.  Protection against exiting Emacs and killing the
buffer can be set separately.  The mechanism for auto turning off
protection for buffers with inferior processes has been generalized.


* Incompatible Lisp Changes in Emacs 24.1

---
** `char-direction-table' and the associated function `char-direction'
were deleted.  They were buggy and inferior to the new support of
bidirectional editing introduced in Emacs 24.  If you need the
bidirectional properties of a character, use `get-char-code-property'
with the last argument `bidi-class'.

+++
** `copy-directory' now copies the source directory as a subdirectory
of the target directory, if the latter is an existing directory.  The
new optional arg COPY-CONTENTS, if non-nil, makes the function copy
the contents directly into a pre-existing target directory.

** `compose-mail' now accepts an optional 8th arg, RETURN-ACTION, and
passes it to the mail user agent function.  This argument specifies an
action for returning to the caller after finishing with the mail.
This is currently used by Rmail to delete a mail window.

** For mouse click input events in the text area, the Y pixel
coordinate in the POSITION list now counts from the top of the text
area, excluding any header line.  Previously, it counted from the top
of the header line.

** Removed obsolete name `e' (use `float-e' instead).

** A backquote not followed by a space is now always treated as new-style.

** Test for special mode-class was moved from view-file to view-buffer.
FIXME: This only says what was changed, but not what are the
programmer-visible consequences.

** Passing a nil argument to a minor mode function now turns the mode
ON unconditionally.

+++
** During startup, Emacs no longer adds entries for `menu-bar-lines'
and `tool-bar-lines' to `default-frame-alist' and `initial-frame-alist'.
With these alist entries omitted, `make-frame' checks the value of the
variable `menu-bar-mode'/`tool-bar-mode' to determine whether to create
a menu-bar or tool-bar, respectively.  If the alist entries are added,
they override the value of `menu-bar-mode'/`tool-bar-mode'.

+++
** Regions created by mouse dragging are now normal active regions,
similar to the ones created by shift-selection.  In previous Emacs
versions, these regions were delineated by `mouse-drag-overlay', which
has now been removed.

** cl.el no longer provides `cl-19'.

** The menu bar bindings's caches are not used any more.
Use (where-is-internal <def> nil t) instead.

** The following obsolete functions and aliases were removed:
comint-kill-output, decompose-composite-char, outline-visible,
internal-find-face, internal-get-face, frame-update-faces,
frame-update-face-colors, x-frob-font-weight, x-frob-font-slant,
x-make-font-bold, x-make-font-demibold, x-make-font-unbold
x-make-font-italic, x-make-font-oblique, x-make-font-unitalic
x-make-font-bold-italic, mldrag-drag-mode-line, mldrag-drag-vertical-line,
iswitchb-default-keybindings, char-bytes, isearch-return-char,
make-local-hook

** The following obsolete variables and varaliases were removed:
checkdoc-minor-keymap, vc-header-alist, directory-sep-char, and
font-lock-defaults-alist.

** The following obsolete files were removed:
sc.el, x-menu.el, rnews.el, rnewspost.el

** FIXME finder-inf.el changes.


* Lisp changes in Emacs 24.1

** Code can now use lexical scoping by default instead of dynamic scoping.
The `lexical-binding' variable lets code use lexical scoping for local
variables.  It is typically set via file-local variables, in which case it
applies to all the code in that file.

*** `eval' takes a new optional argument `lexical' to choose the new lexical
binding instead of the old dynamic binding mode.

*** Lexically scoped interpreted functions are represented with a new form
of function value which looks like (closure ENV ARGS &rest BODY).

*** New macro `letrec' to define recursive local functions.

*** New function `special-variable-p' to check whether a variable is
declared as dynamically bound.

** An Emacs Lisp testing tool is now included.
Emacs Lisp developers can use this tool to write automated tests for
their code.  See the ERT info manual for details.

** Changes for bidirectional display and editing

+++
*** New function `current-bidi-paragraph-direction'.
This returns the actual value of base direction of the paragraph at
point.

+++
*** New function `bidi-string-mark-left-to-right'.
Given a string containing characters from right-to-left (RTL) scripts,
this function returns another string which can be safely inserted into
a buffer, such that any following text will be always displayed to the
right of that string.  (This works by appending the Unicode
"LEFT-TO-RIGHT MARK" character when the argument string might need that.)

This is useful when the buffer has overall left-to-right (LTR)
paragraph direction and you need to insert a string whose contents and
directionality are not known in advance, without disrupting the layout
of the line.

** Window changes
+++
*** Window tree functions are accessible in Elisp.
Functions are provided to return the parent, siblings or child windows
of any window including internal windows (windows not associated with a
buffer) in the window tree.
+++
**** New function `window-valid-p' gives non-nil for live and internal
windows.
+++
**** Window manipulation can deal with internal windows.
Many window handling functions like `split-window', `delete-window', or
`delete-other-windows' as well as the window resizing functions can now
act on any window including internal ones.
+++
*** window-total-height/-width vs window-body-height/-width.
The function `window-height' has been renamed to `window-total-height'
and `window-width' has been renamed to `window-body-width'.  The old
names are provided as aliases.  Two new functions `window-total-width'
and `window-body-height' are provided.
+++
*** Window parameters specific to window handling functions.
For each window you can specify a parameter to override the default
behavior of a number of functions like `split-window', `delete-window'
and `delete-other-windows'.  The variable `ignore-window-parameters'
allows to ignore processing such parameters.
+++
*** New semantics of third argument of `split-window'.
The third argument of `split-window' has been renamed to SIDE and can be
set to any of the values 'below, 'right, 'above, or 'left to make the
new window appear on the corresponding side of the window that shall be
split.  Any other value of SIDE will cause `split-window' to split the
window into two side-by-side windows as before.
+++
*** Window resizing functions.
A new standard function for resizing windows called `window-resize' has
been introduced.  This and all other functions for resizing windows no
longer delete any windows when they become too small.
+++
*** Deleting the selected window now selects the most recently selected
live window on that frame instead.
+++
*** `adjust-window-trailing-edge' adjustments.
`adjust-window-trailing-edge' can now deal with fixed-size windows and
is able to resize other windows if a window adjacent to the trailing
edge cannot be shrunk any more.  This makes its behavior more similar to
that of Emacs 21 without compromising, however, its inability to delete
windows which was introduced in Emacs 22.
+++
*** Window-local buffer lists.
Windows now have local buffer lists.  This means that removing a buffer
from display in a window will preferably show the buffer previously
shown in that window with its previous window-start and window-point
positions.  This also means that the same buffer may be automatically
shown twice even if it already appears in another window.
+++
*** `switch-to-buffer' has a new optional argument FORCE-SAME-WINDOW,
which if non-nil requires the buffer to be displayed in the currently
selected window, signaling an error otherwise.  If nil, another window
can be used, e.g. if the selected one is strongly dedicated.
+++
*** `split-window-vertically' and `split-window-horizontally' renamed
to `split-window-below' and `split-window-right' respectively.
The old names are kept as aliases.
+++
*** Display actions

**** The second arg to `display-buffer' and `pop-to-buffer' is now
named ACTION, and takes a display action of the same form as
`display-buffer-base-action' (see Changes, above).  A non-nil,
non-list value is treated specially, as the old meaning.

**** New variable `display-buffer-overriding-action'.

**** The procedure of `display-buffer' etc. to choose a window is
determined by combining `display-buffer-overriding-action',
`display-buffer-alist', the ACTION arg, `display-buffer-base-action',
and `display-buffer-fallback-action'.  The second and fourth of these
are user-customizable variables.

See the docstring of `display-buffer' for details.

+++
*** New behavior of `quit-window'.
The behavior of `quit-window' has been changed in order to restore the
state before the last buffer display operation in that window.

+++
*** The new option `frame-auto-hide-function' lets you choose between
iconifying or deleting a frame when burying a buffer shown in a dedicated
frame or quitting a window showing a buffer in a frame of its own.

** Completion

*** New variable completion-extra-properties used to specify extra properties
of the current completion:
- :annotate-function, same as the old completion-annotate-function.
- :exit-function, function to call after completion took place.

*** Functions on completion-at-point-functions can return any of the properties
valid for completion-extra-properties.

*** completion-annotate-function is obsolete.

*** New `metadata' method for completion tables.  The metadata thus returned
can specify various details of the data returned by `all-completions':
- `category' is the kind of objects returned (e.g., `buffer', `file', ...),
  used to select a style in completion-category-overrides.
- `annotation-function' to add annotations in *Completions*.
- `display-sort-function' to specify how to sort entries in *Completions*.
- `cycle-sort-function' to specify how to sort entries when cycling.

*** minibuffer-local-filename-must-match-map is not used any more.
Instead, the bindings in minibuffer-local-filename-completion-map are
combined with minibuffer-local-must-match-map.

*** New variable `completing-read-function' allows overriding the
behavior of `completing-read'.

+++
** `glyphless-char-display' can now distinguish between graphical and
text terminal display, via a char-table entry that is a cons cell.

** `open-network-stream' can now be used to open an encrypted stream.
It now accepts an optional `:type' parameter for initiating a TLS
connection, directly or via STARTTLS.  To do STARTTLS, additional
parameters (`:end-of-command', `:success', `:capabilities-command')
must also be supplied.

+++
** pre/post-command-hook are not reset to nil upon error.
Instead, the offending function is removed.

** New hook types

*** New function `run-hook-wrapped' for running an abnormal hook by
passing the hook functions as arguments to a "wrapping" function.
+++
*** New macro `with-wrapper-hook' for running an abnormal hook as a
set of "wrapping" filters, similar to around advice.

** `server-eval-at' is provided to allow evaluating forms on different
Emacs server instances.

** `call-process' allows a `(:file "file")' spec to redirect STDOUT to
a file.

---
** Variable `stack-trace-on-error' removed.
Also the debugger can now "continue" from an error, which means it will jump
to the error handler as if the debugger had not been invoked instead of
jumping all the way to the top-level.

+++
** The function format-time-string now supports the %N directive, for
higher-resolution time stamps.

** New function `read-char-choice' reads a restricted set of characters,
discarding any inputs not inside the set.

** `image-library-alist' is renamed to `dynamic-library-alist'.
The variable is now used to load all kind of supported dynamic libraries,
not just image libraries.  The previous name is still available as an
obsolete alias.

** New variable `syntax-propertize-function'.
This replaces `font-lock-syntactic-keywords' which is now obsolete.
This allows syntax-table properties to be set independently from font-lock:
just call syntax-propertize to make sure the text is propertized.
Together with this new variable come a new hook
syntax-propertize-extend-region-functions, as well as two helper functions:
syntax-propertize-via-font-lock to reuse old font-lock-syntactic-keywords
as-is; and syntax-propertize-rules which provides a new way to specify
syntactic rules.

** New hook post-self-insert-hook run at the end of self-insert-command.

+++
** Syntax tables support a new "comment style c" additionally to style b.

** frame-local variables cannot be let-bound any more.

** Major and minor mode changes
+++
*** `prog-mode' is a new major mode from which programming modes
should be derived.

**** `prog-mode-hook' can be used to enable features for programming
modes, e.g. (add-hook 'prog-mode-hook 'flyspell-prog-mode) to enable
on-the-fly spell checking for comments and strings.

*** New hook `change-major-mode-after-body-hook', run by
`run-mode-hooks' just before any other mode hooks.

*** Enabled globalized minor modes can be disabled in specific modes,
by running (FOO-mode-hook 0) via a mode hook.

*** `define-minor-mode' accepts a new keyword :variable.

+++
** `delete-file' and `delete-directory' now accept optional arg TRASH.
Trashing is performed if TRASH and `delete-by-moving-to-trash' are
both non-nil.  Interactively, TRASH defaults to t, unless a prefix
argument is supplied (see Trash changes, above).

** `facemenu-read-color' is now an alias for `read-color'.
The command `read-color' now requires a match for a color name or RGB
triplet, instead of signaling an error if the user provides a invalid
input.

** Tool-bars can display separators.
Tool-bar separators are handled like menu separators in menu-bar maps,
i.e. via menu entries of the form `(menu-item "--")'.

** Image API

*** Animated images support (currently animated gifs only).

**** `image-animated-p' returns non-nil if an image can be animated.

**** `image-animate' animates a supplied image spec.

**** `image-animate-timer' returns the timer object for an image that
is being animated.

*** `image-extension-data' is renamed to `image-metadata'.

*** If Emacs is compiled with ImageMagick support (see Startup
Changes), the function `imagemagick-types' returns a list of image
file extensions that your installation of ImageMagick supports.  The
function `imagemagick-register-types' enables ImageMagick support for
these image types, minus those listed in `imagemagick-types-inhibit'.

See the Emacs Lisp Reference Manual for more information.

** XML and HTML parsing

*** If Emacs is compiled with libxml2 support (which is the default),
two new Emacs Lisp-level functions are defined:
`libxml-parse-html-region' (which will parse "real world" HTML)
and `libxml-parse-xml-region' (which parses XML).  Both return an
Emacs Lisp parse tree.

FIXME: These should be front-ended by xml.el.

** GnuTLS

*** Emacs can be compiled with libgnutls support
This is the default.  You will then be able to use the functionality
in gnutls.el, namely the `open-gnutls-stream' and `gnutls-negotiate'
functions.  It's easiest to use these functions through
`open-network-stream' because it can upgrade connections through
STARTTLS opportunistically or use plain SSL, depending on your needs.

Only versions 2.8.x and higher or GnuTLS have been tested.
[FIXME: this statement needs clarifying, given that GnuTLS >= 2.6.6
is the test used by configure.]

*** gnutls-log-level
Set `gnutls-log-level' higher than 0 to get debug output.  1 is for
important messages, 2 is for debug data, and higher numbers are as per
the GnuTLS logging conventions.  The output is in *Messages*.

** Isearch

*** New hook `isearch-update-post-hook' that runs in `isearch-update'.

+++
** Progress reporters can now "spin".
The MIN-VALUE and MAX-VALUE arguments of `make-progress-reporter' can
now be nil, or omitted.  This makes a "non-numeric" reporter.  Each
time you call `progress-reporter-update' on that progress reporter,
with a nil or omitted VALUE argument, the reporter message is
displayed with a "spinning bar".

** New variable `revert-buffer-in-progress-p' is true while a buffer is
being reverted, even if the buffer has a local `revert-buffer-function'.

** New variables `delayed-warnings-list' and `delayed-warnings-hook' allow
deferring warnings until the main command loop is executed.

+++
** `set-auto-mode' now respects mode: local variables at the end of files,
as well as those in the -*- line.

---
** rx.el has a new `group-n' construct for explicitly numbered groups.

** keymaps can inherit from multiple parents.

** `debug-on-event' lets you debug Emacs when stuck because of inhibit-quit.

+++
** New reader macro ## which stands for the empty symbol.
This means that the empty symbol can now be read back.  Also, #: by itself
(when not immediately followed by a possible symbol character) stands for
an empty uninterned symbol.

** Obsolete functions and variables

*** buffer-substring-filters is obsolete.
Use `filter-buffer-substring-functions' instead.

*** `byte-compile-disable-print-circle' is obsolete.

*** `deferred-action-list' and `deferred-action-function' are obsolete.
+++
*** `font-lock-maximum-size' is obsolete.


* Changes in Emacs 24.1 on non-free operating systems

** New configure.bat option --enable-checking builds Emacs with extra
runtime checks.

** New configure.bat option --distfiles to specify files to be
included in binary distribution.

** New configure.bat option --without-gnutls to disable automatic
GnuTLS detection.

** New configure.bat option --lib for general library linkage, works
with the USER_LIBS build variable.

** New make target `dist' to create binary distribution for MS Windows.

** Function `w32-default-color-map' is now obsolete.

** On Nextstep/OSX, the menu bar can be hidden by customizing
ns-auto-hide-menu-bar.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.


Local variables:
mode: outline
paragraph-separate: "[ 	]*$"
end:
